// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String?
  username String       @unique
  email     String      @unique
  password  String
  passwordChangeAt DateTime?
  role UserRole @default(user)
  status UserStatus @default(activate)
  photoURL String?
  phone String?
  createdAt DateTime    @default(now())
  updatedAt DateTime?
  lostItems LostItem[]
  foundItems FoundItem[]
  claimItems ClaimItem[]
  

  @@map("users")
}

model LostItem {
  id        String      @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  title String
  description String
  category String
  brand String
  isFound Boolean @default(false)
  foundAt DateTime?
  lostDate DateTime
  lostLocation String
  images String[]
  email String?
  phone String?
  username String?
  createdAt DateTime @default(now())
  updatedAt DateTime?

  @@map("lost_items")
}

model FoundItem {
  id        String      @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  title String
  description String
  category String
  brand String
  giveToOwner Boolean @default(false)
  foundDate DateTime
  foundLocation String
  images String[]
  username String?
  email String?
  phone String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  claimItems ClaimItem[]

  @@map("found_items")
}

model ClaimItem {
  id        String      @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  itemId String
  item FoundItem @relation(fields: [itemId], references: [id])
  description String
  productInvoice String
  images String[]
  status ClaimStatus @default(pending)
  statusUpdateAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime?

  @@map("claim_items")
}

enum UserRole {
  admin
  user
}

enum UserStatus {
  activate
  deactivate
}

enum ClaimStatus {
  pending
  approved
  rejected
}

